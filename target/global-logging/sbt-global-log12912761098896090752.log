[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 16.0.1)
[debug]             Load.loadUnit: plugins took 15.8967ms
[debug]             Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory C:\Users\user\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2949 ms
[debug]                 Load.resolveProject(global-plugins) took 0.5442ms
[debug]               Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\user\.sbt\1.0\plugins, plugins: List(<none>))) took 2.0231ms
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: (global-plugins)
[debug]             Load.loadUnit: loadedProjectsRaw took 2.4859ms
[debug]             Load.loadUnit: cleanEvalClasses took 0.0043ms
[debug]           Load.loadUnit(file:/C:/Users/user/.sbt/1.0/plugins/, ...) took 18.8053ms
[debug]         Load.apply: load took 19.4634ms
[debug]         Load.apply: resolveProjects took 0.0437ms
[debug]         Load.apply: finalTransforms took 2.6498ms
[debug]         Load.apply: config.delegates took 0.1589ms
[debug]         Load.apply: Def.make(settings)... took 22.3862ms
[debug]         Load.apply: structureIndex took 6.6695ms
[debug]         Load.apply: mkStreams took 0.0016ms
[info] loading global plugins from C:\Users\user\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]       Load.defaultLoad until apply took 85.1525ms
[debug]                 Load.loadUnit: plugins took 13.0125ms
[debug]                 Load.loadUnit: defsScala took 0.0019ms
[debug] [Loading] Scanning directory C:\Users\user\JSON\project
[debug]                   Load.loadUnit: mkEval took 0.1267ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\JSON\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.4377 ms
[info] loading settings for project json-build from idea8.sbt ...
[debug]                     Load.resolveProject(json-build) took 0.6207ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id json-build, base: C:\Users\user\JSON\project, plugins: List(<none>))) took 1.1957ms
[debug] [Loading] Done in C:\Users\user\JSON\project, returning: (json-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 8.3026ms
[debug]                 Load.loadUnit: cleanEvalClasses took 1.7484ms
[debug]               Load.loadUnit(file:/C:/Users/user/JSON/project/, ...) took 23.3641ms
[debug]             Load.apply: load took 24.0073ms
[debug]             Load.apply: resolveProjects took 0.0416ms
[debug]             Load.apply: finalTransforms took 2.1471ms
[debug]             Load.apply: config.delegates took 0.0897ms
[debug]             Load.apply: Def.make(settings)... took 18.2793ms
[debug]             Load.apply: structureIndex took 7.4236ms
[debug]             Load.apply: mkStreams took 0.0016ms
[info] loading project definition from C:\Users\user\JSON\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 108.9518ms
[debug]           Load.loadUnit: defsScala took 0.0019ms
[debug] [Loading] Scanning directory C:\Users\user\JSON
[debug]             Load.loadUnit: mkEval took 0.1328ms
[error] Type error in expression
[debug] > Exec(loadFailed, None, None)
[warn] Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)
