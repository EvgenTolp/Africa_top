[debug] > Exec(;reload; set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers resolveSbtClassifiers" ;*/*:dumpStructureTo C:/Users/user/AppData/Local/Temp/sbt-structure.xml; session clear-all ; set ideaPort in Global := 58299, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 16.0.1)
[debug]       Load.loadUnit: plugins took 25.1058ms
[debug]       Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\Users\user\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5195 ms
[debug]           Load.resolveProject(global-plugins) took 2.7638ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\user\.sbt\1.0\plugins, plugins: List(<none>))) took 4.7645ms
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 6.2664ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0049ms
[debug]     Load.loadUnit(file:/C:/Users/user/.sbt/1.0/plugins/, ...) took 37.633ms
[debug]   Load.apply: load took 42.3262ms
[debug]   Load.apply: resolveProjects took 0.2601ms
[debug]   Load.apply: finalTransforms took 7.6071ms
[debug]   Load.apply: config.delegates took 0.3785ms
[debug]   Load.apply: Def.make(settings)... took 32.5396ms
[debug]   Load.apply: structureIndex took 8.8487ms
[debug]   Load.apply: mkStreams took 0.1054ms
[info] loading global plugins from C:\Users\user\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Forcing garbage collection...
[debug] Load.defaultLoad until apply took 446.9614ms
[debug]           Load.loadUnit: plugins took 19.7401ms
[debug]           Load.loadUnit: defsScala took 0.0015ms
[debug] [Loading] Scanning directory C:\Users\user\JSON\project
[debug]             Load.loadUnit: mkEval took 0.147ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\JSON\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.5509 ms
[info] loading settings for project json-build from idea2.sbt ...
[debug]               Load.resolveProject(json-build) took 3.6567ms
[debug]             Load.loadTransitive: finalizeProject(Project(id json-build, base: C:\Users\user\JSON\project, plugins: List(<none>))) took 4.492ms
[debug] [Loading] Done in C:\Users\user\JSON\project, returning: (json-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 13.6531ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.044ms
[debug]         Load.loadUnit(file:/C:/Users/user/JSON/project/, ...) took 35.7692ms
[debug]       Load.apply: load took 36.3729ms
[debug]       Load.apply: resolveProjects took 0.0508ms
[debug]       Load.apply: finalTransforms took 2.4989ms
[debug]       Load.apply: config.delegates took 0.315ms
[debug]       Load.apply: Def.make(settings)... took 18.2495ms
[debug]       Load.apply: structureIndex took 6.2409ms
[debug]       Load.apply: mkStreams took 0.0013ms
[info] loading project definition from C:\Users\user\JSON\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 118.7507ms
[debug]     Load.loadUnit: defsScala took 0.0019ms
[debug] [Loading] Scanning directory C:\Users\user\JSON
[debug]       Load.loadUnit: mkEval took 0.1306ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\JSON, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 0.8538 ms
[info] loading settings for project json from build.sbt ...
[debug]         Load.resolveProject(json) took 15.9122ms
[debug]       Load.loadTransitive: finalizeProject(Project(id json, base: C:\Users\user\JSON, plugins: List(<none>))) took 17.077ms
[debug] [Loading] Done in C:\Users\user\JSON, returning: (json)
[debug]     Load.loadUnit: loadedProjectsRaw took 347.8906ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.7654ms
[debug]   Load.loadUnit(file:/C:/Users/user/JSON/, ...) took 475.7513ms
[debug] Load.apply: load took 476.8853ms
[debug] Load.apply: resolveProjects took 0.0557ms
[debug] Load.apply: finalTransforms took 6.5119ms
[debug] Load.apply: config.delegates took 0.1203ms
[debug] Load.apply: Def.make(settings)... took 19.501ms
[debug] Load.apply: structureIndex took 6.9218ms
[debug] Load.apply: mkStreams took 0.0016ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to JSON (in build file:/C:/Users/user/JSON/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers resolveSbtClassifiers", None, None)
[info] Defining Global / sbtStructureOptions
[info] The new value will be used by Global / ssOptions
[debug] Defining 
[debug] 	Global / sbtStructureOptions
[debug] 
[debug] The new value will be used by 
[debug] 	Global / ssOptions
[info] Reapplying settings...
[info] set current project to JSON (in build file:/C:/Users/user/JSON/)
[debug] > Exec(*/*:dumpStructureTo C:/Users/user/AppData/Local/Temp/sbt-structure.xml, None, None)
[debug] Evaluating tasks: Global / dumpStructureTo
[warn] sbt 0.13 shell syntax is deprecated; use slash syntax instead: Global / dumpStructureTo
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[info] Writing structure to C:\Users\user\AppData\Local\Temp\sbt-structure.xml...
[info] Done.
[success] Total time: 2 s, completed 16 июл. 2021 г., 21:25:13
[debug] > Exec(session clear-all, None, None)
[info] Reapplying settings...
[info] set current project to JSON (in build file:/C:/Users/user/JSON/)
[debug] > Exec(set ideaPort in Global := 58299, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to JSON (in build file:/C:/Users/user/JSON/)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
